<?php

require __DIR__ . '/includes/vendor/autoload.php';


module_load_include('inc', 'mobbexsubscription', 'includes/set_config.inc');
module_load_include('inc', 'mobbexsubscription', 'includes/webhook.inc');
module_load_include('inc', 'mobbexsubscription', 'includes/test.inc');
module_load_include('inc', 'mobbexsubscription', 'includes/subscriber_page.inc');
module_load_include('inc', 'mobbexsubscription', 'includes/create_subscription.inc');


/**
* @method implementa hook_init e inicializa el modulo
*/
function mobbexsubscription_init(){

}

function mobbexsubscription_permission(){
    return [
        'acceso_configurar_mobbexsubscription' =>  array(
          'title' => t('Mobbex Subscription - Configuracion'),
          'description' => t('Permisos para acceder a configuraciones de Mobbex Subscription .'),
        ),
        'acceso_mi_suscripcion_mobbexsubscription' =>  array(
          'title' => t('Mobbex Subscription - Mi Suscripción'),
          'description' => t('Permisos para acceder a Mi Suscripción .'),
        ),
        'acceso_create_subscription_mobbexsubscription' =>  array(
          'title' => t('Mobbex Subscription - Crear Suscripción'),
          'description' => t('Permisos para acceder a Crear Suscripción .'),
        )
    ];
  }
  
  /**
  * @method implementa hook_help y muestra la ayuda de configuración y uso del modulo
  */
  function mobbexsubscription_help($path, $arg){
    switch ($path) {
      case 'mobbexsubscription/manage':
        // Help text for the simple page registered for this path.
        return t('This section displays the list of Pages.');
    }
  }
  
  /**
  * @method implementa hook_menu y define los items de menu del modulo
  */
  
  function mobbexsubscription_menu()
  {
      $items = array();
  
      /*------ ITEMS DE MENU PARA MODULO -------*/
      $items['admin/config/mobbexsubscription/configurar'] = [
        'title' => 'Configuración',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('mobbexsubscription_config_form'),
        'access arguments' => array('acceso_configurar_mobbexsubscription'),
        'file' => 'includes/set_config.inc',
        'expanded' => TRUE,
      ];
      $items['admin/config/mobbexsubscription/nueva-suscripcion'] = [
        'title' => 'Crear Suscripción',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('create_subscription_form'),
        'access arguments' => array('acceso_create_subscription_mobbexsubscription'),
        'file' => 'includes/create_subscription.inc',
        'expanded' => TRUE,
      ];
      $items['mi-suscripcion'] = [
        'title' => 'Mi Suscripción',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('subscriber_page_form'),
        'access arguments' => array('acceso_mi_suscripcion_mobbexsubscription'),
        'file' => 'includes/subscriber_page.inc',
        'expanded' => TRUE,
      ];
      $items['mobbex/webhook'] = [
        'page callback' => 'drupal_get_form',
        'page arguments' => array('webhook_form'),
        'file' => 'includes/webhook.inc',
        'expanded' => TRUE,
      ];
      $items['admin/subscripciones/test'] = [
        'page callback' => 'drupal_get_form',
        'page arguments' => array('test_form'),
        'file' => 'includes/test.inc',
        'expanded' => TRUE,
      ];
      $items['admin/config/mobbexsubscription'] = [
        'title'            => 'Mobbex Subscriptions',
        'description'      => 'Seccion',
        'page callback'    => 'mobbexsubscription_config_form',
        'access arguments' => ['acceso_configurar_mobbexsubscription'],
      ];
    return $items;
  }
  
/**
 *  Implementa hook_block_info()
 */
function mobbexsubscription_block_info() {

  $blocks['boton_de_suscripcion'] = [
    // info: The name of the block.
    'info' => t('Mobbex Subscription: Botón Suscribirme'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  ];

  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function mobbexsubscription_block_view($delta = '') {
  // The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'boton_de_suscripcion':
      $block['subject'] = t('Suscribirse');
      //$block['content'] = mobbexsubscription_contents($delta);
      $block['content'] = drupal_get_form('createNewSuscriptor_form');
      break;
  }
  return $block;
}

/**
 * A module-defined block content function.
 */
function mobbexsubscription_contents($which_block) {
  switch ($which_block) {
    case 'boton_de_suscripcion':
      $url = variable_get('mobbexsubscription_shorten_url', 0);
      $msg = '';
      if(!empty($url)){
        $msg = '<a href="'.$url.'"> Suscribirse </a>';
      }
      $result = [
        '#markup' => $msg,
      ];
      return $result;
  }
}

function createNewSuscriptor_form($form,  &$form_state){

$form['dni'] = [
  '#type'        => 'textfield',
  '#title'       => t('DNI'),
  '#description' => t('DNI'),
  '#required'    => TRUE,
];
$form['nombre'] = [
  '#type'        => 'textfield',
  '#title'       => t('Nombre'),
  '#description' => t('nombre'),
  '#required'    => TRUE,
];
$form['correo'] = [
  '#type'        => 'textfield',
  '#title'       => t('correo'),
  '#description' => t('correo'),
  '#required'    => TRUE,
];
$form['confirm'] = [
    '#type'     => 'submit',
    '#name'     => 'confirmNewSubscription',
    '#value'    => t('Confirmar'),
    '#validate' => ['createNewSuscriptor_validate'],
    '#submit'   => ['createNewSuscriptor_submit'],
];

return $form;
}
function createNewSuscriptor_validate($form,  &$form_state){}
function createNewSuscriptor_submit($form,  &$form_state){

  $uid = $GLOBALS['user']->uid;
  $apikey       = variable_get('mobbexsubscription_apikey', 0);
  $token        = variable_get('mobbexsubscription_token', 0);
  $subscription = variable_get('mobbexsubscription_idsubs', 0);

  if(!$apikey || !$token) return;

  $request = new HTTP_Request2();
  $request->setUrl('https://api.mobbex.com/p/subscriptions/' .$subscription. '/subscriber');
  $request->setMethod(HTTP_Request2::METHOD_POST);
  $request->setConfig(array(
    'follow_redirects' => TRUE
  ));
  $request->setHeader(array(
    'x-api-key'      => $apikey,
    'x-access-token' => $token,
    'Content-Type'   => 'application/json',
    'Content-Type'   => 'application/json'
  ));

  $data = [
    'customer' => [
        'identification'   => $form_state['values']['dni'],
        'email'            => $form_state['values']['correo'],
        'name'             => $form_state['values']['nombre'],
        'custom_id_drupal' => $uid
    ],
    'startDate' => [
        'day' => date('j'),
        'month' => date('n'),
    ],
  ];

  $json = json_encode($data);


  $request->setBody($json);
  try {
    $response = $request->send();
    if ($response->getStatus() == 200) {
      //echo $response->getBody();
      $body = json_decode($response->getBody(), TRUE);
      if($body['result'] == 'true'){
        $suscriber = $body['data']['uid'];
        drupal_set_message( 'Se creó un nuevo suscriptor '.$suscriber);
        associateSuscriptionWithUser($body['data']);
        drupal_goto($body['data']['subscriberUrl'], array('external' => TRUE));
      }
      else 
          drupal_set_massage('Ocurrio un error', 'ERROR');
    }
    else {
      $message = 'Unexpected HTTP status: ' . $response->getStatus() . ' ' .$response->getReasonPhrase();
      watchdog('mebbexsubscription', $message, array(), WATCHDOG_ERROR);
      drupal_set_message($message);
    }
  }
  catch(HTTP_Request2_Exception $e) {
    $message = 'Error: ' . $e->getMessage();
    watchdog('mebbexsubscription', $message, array(), WATCHDOG_ERROR);
    drupal_set_message($message);
  }
}

function associateSuscriptionWithUser($data = array()){
}